{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Js\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was clicked\", + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleLoClick = () => {\n    // console.log(\"Uppercase was clicked\", + text);\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"OnChange\");\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('Enter text here'); // text= \"new text\"; -> wrong way to change the state\n  // setText(\"new Text\");  //correct way to change the state\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary M\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["C:/React Js/textutils/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleOnChange","event","target","value","heading","split","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,aAAa,GAAG,MAAM;AACxB;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,WAAL,EAAd;AACAC,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAMA,QAAMI,aAAa,GAAG,MAAM;AACxB;AACA,QAAIJ,OAAO,GAAGC,IAAI,CAACI,WAAL,EAAd;AACAF,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAMA,QAAMM,cAAc,GAAIC,KAAD,IAAW;AAC9B;AACAJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAHD;;AAIA,QAAM,CAACR,IAAD,EAAOE,OAAP,IAAkBP,QAAQ,CAAC,iBAAD,CAAhC,CAjBoC,CAkBpC;AACA;;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAKE,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,KAAK,EAAET,IAA1C;AAAgD,UAAA,QAAQ,EAAEK,cAA1D;AAA0E,UAAA,EAAE,EAAC,OAA7E;AAAqF,UAAA,IAAI,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEP,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEK,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBAAIH,IAAI,CAACU,KAAL,CAAW,GAAX,EAAgBC,MAApB,iBAAuCX,IAAI,CAACW,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAI,QAAQX,IAAI,CAACU,KAAL,CAAW,GAAX,EAAgBC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAA,kBAAIX;AAAJ;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAmBH;;GAvCuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\", + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was clicked\", + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"OnChange\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    // text= \"new text\"; -> wrong way to change the state\r\n    // setText(\"new Text\");  //correct way to change the state\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary M\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h1>Your text summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length}</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}